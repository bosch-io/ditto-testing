# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0

version: "2.4"

networks:
  test:
    name: ${DOCKER_NETWORK:-test}

services:

  artemis:
    image: vromero/activemq-artemis:2.16.0-alpine
    networks:
      - test
    expose:
      - "5672"
    volumes:
      - ./artemis:/var/lib/artemis/etc-override

  mqtt:
    image: docker.io/eclipse-mosquitto:1.6.15
    networks:
      - test
    expose:
      - "1883"
      - "8883"
    volumes:
      - ./mqtt:/mosquitto/config:ro

  kafka:
    image: apache/kafka:4.0.0
    networks:
      - test
    expose:
      - "9092"
      - "9093"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_JAAS_CONFIG: PLAIN
      KAFKA_OPTS: "-Djava.security.auth.login.config=/opt/kafka/config/kafka_jaas.conf"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_TLS_CLIENT_AUTH: "none"
    volumes:
      - ./kafka/kafka_jaas.conf:/opt/kafka/config/kafka_jaas.conf

  rabbitmq:
    image: docker.io/rabbitmq:3.6.6-management-alpine
    networks:
      test:
        aliases:
          - rabbitmq-overwrite
    expose:
      - "5672"
      - "15672"
    environment:
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error}]
    volumes:
      - ./rabbitmq:/etc/rabbitmq:ro

  fluentbit:
    image: docker.io/fluent/fluent-bit:1.8
    networks:
      - test
    depends_on:
      - kafka
    expose:
      - "2020"
      - "24224"
    volumes:
      - ./fluentbit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf:ro

  oauth:
    image: ghcr.io/navikt/mock-oauth2-server:2.1.3
    networks:
      - test
    expose:
      - "9900"
    environment:
      - PORT=9900

  mongodb:
    image: docker.io/mongo:7.0
    networks:
      - test
    expose:
      - "27017"
    command: mongod --storageEngine wiredTiger

  policies:
    image: ${DOCKER_REGISTRY:-docker.io}/${DOCKER_REGISTRY_NAMESPACE:-eclipse}/${DITTO_SERVICE_PREFIX-ditto-}policies:${DITTO_VERSION:-nightly}
    depends_on:
      - mongodb
    networks:
      - test
    env_file: docker-compose.env
    environment:
      - TZ=Europe/Berlin
      - INSTANCE_INDEX=1
      - BIND_HOSTNAME=policies
      - REMOTING_IDLE_CPU_LEVEL=2
      - JAVA_TOOL_OPTIONS=-Xms${POLICIES_MEMORY:-1g} -Xmx${POLICIES_MEMORY:-1g} -Dpekko.cluster.seed-nodes.0=pekko://ditto-cluster@policies:2551 -Dpekko.remote.artery.canonical.hostname=policies ${TEST_JAVA_OPTIONS}
      - CLUSTER_DOWNING_DOWN_REMOVAL_MARGIN=65s
      - LOG_LEVEL=INFO
      - LOG_LEVEL_APPLICATION=INFO
      - POLICY_SNAPSHOT_THRESHOLD=1
      - POLICY_SNAPSHOT_INTERVAL=${POLICY_SNAPSHOT_INTERVAL:-1s}
      - POLICY_SUBJECT_EXPIRY_GRANULARITY=5s # configure to 5 seconds in order to test for invalidation in system test
      - POLICY_SUBJECT_DELETION_ANNOUNCEMENT_GRANULARITY=1s
      - CLEANUP_ENABLED=false
      - CLEANUP_HISTORY_RETENTION_DURATION=0d
      - CLEANUP_TIMER_THRESHOLD=10s
      - CLEANUP_CREDITS_PER_BATCH=400

  things:
    image: ${DOCKER_REGISTRY:-docker.io}/${DOCKER_REGISTRY_NAMESPACE:-eclipse}/${DITTO_SERVICE_PREFIX-ditto-}things:${DITTO_VERSION:-nightly}
    depends_on:
      - mongodb
      - policies
    networks:
      - test
    env_file: docker-compose.env
    environment:
      - TZ=Europe/Berlin
      - INSTANCE_INDEX=1
      - BIND_HOSTNAME=things
      - JAVA_TOOL_OPTIONS=-Xms${THINGS_MEMORY:-1g} -Xmx${THINGS_MEMORY:-1g} -Dpekko.cluster.seed-nodes.0=pekko://ditto-cluster@policies:2551 -Dpekko.remote.artery.canonical.hostname=things ${TEST_JAVA_OPTIONS}
      - CLUSTER_DOWNING_DOWN_REMOVAL_MARGIN=65s
      - LOG_LEVEL=INFO
      - LOG_LEVEL_APPLICATION=INFO
      - THING_SNAPSHOT_INTERVAL=${THING_SNAPSHOT_INTERVAL:-1s}
      - THING_SNAPSHOT_THRESHOLD=1
      - CLEANUP_ENABLED=false
      - CLEANUP_HISTORY_RETENTION_DURATION=0d
      - CLEANUP_TIMER_THRESHOLD=10s
      - CLEANUP_CREDITS_PER_BATCH=400

  things-search:
    image: ${DOCKER_REGISTRY:-docker.io}/${DOCKER_REGISTRY_NAMESPACE:-eclipse}/${DITTO_SERVICE_PREFIX-ditto-}things-search:${DITTO_VERSION:-nightly}
    depends_on:
      - mongodb
      - policies
      - things
    networks:
      - test
    env_file: docker-compose.env
    environment:
      - TZ=Europe/Berlin
      - INSTANCE_INDEX=1
      - BIND_HOSTNAME=things-search
      - JAVA_TOOL_OPTIONS=-Xms${THINGS_SEARCH_MEMORY:-1g} -Xmx${THINGS_SEARCH_MEMORY:-1g} -Dpekko.cluster.seed-nodes.0=pekko://ditto-cluster@policies:2551 -Dpekko.remote.artery.canonical.hostname=things-search ${TEST_JAVA_OPTIONS} ${THINGS_SEARCH_JAVA_OPTIONS}
      - CLUSTER_DOWNING_DOWN_REMOVAL_MARGIN=65s
      - LOG_LEVEL=INFO
      - LOG_LEVEL_APPLICATION=INFO
      - EVENT_PROCESSING_ACTIVE=${EVENT_PROCESSING_ACTIVE:-true}
      - BACKGROUND_SYCN_THROTTLE_PERIOD=1s
      - BACKGROUND_SYNC_ENABLED=${BACKGROUND_SYNC_ENABLED:-true}
      - BACKGROUND_SYNC_TOLERANCE_WINDOW=${BACKGROUND_SYNC_TOLERANCE_WINDOW:-2m}
      - BACKGROUND_SYNC_QUIET_PERIOD=${BACKGROUND_SYNC_QUIET_PERIOD:-5m}
      - THINGS_SEARCH_UPDATER_STREAM_WRITE_INTERVAL=${THINGS_SEARCH_UPDATER_STREAM_WRITE_INTERVAL:-1s}
      - THINGS_SEARCH_UPDATER_STREAM_POLICY_CACHE_RETRY_DELAY=${THINGS_SEARCH_UPDATER_STREAM_POLICY_CACHE_RETRY_DELAY:-0s}
      - THINGS_SEARCH_UPDATER_STREAM_THING_CACHE_RETRY_DELAY=${THINGS_SEARCH_UPDATER_STREAM_THING_CACHE_RETRY_DELAY:-0s}
      - MONGO_DB_CONNECTION_POOL_SIZE=100

  connectivity:
    image: ${DOCKER_REGISTRY:-docker.io}/${DOCKER_REGISTRY_NAMESPACE:-eclipse}/${DITTO_SERVICE_PREFIX-ditto-}connectivity:${DITTO_VERSION:-nightly}
    depends_on:
      - mongodb
      - policies
    networks:
      - test
    env_file: docker-compose.env
    environment:
      - TZ=Europe/Berlin
      - INSTANCE_INDEX=1
      - BIND_HOSTNAME=connectivity
      - JAVA_TOOL_OPTIONS=-Xms${CONNECTIVITY_MEMORY:-2g} -Xmx${CONNECTIVITY_MEMORY:-2g} -Dpekko.cluster.seed-nodes.0=pekko://ditto-cluster@policies:2551 -Dpekko.remote.artery.canonical.hostname=connectivity ${TEST_JAVA_OPTIONS} -Dditto.connectivity.connection.snapshot.threshold=1 -Dpekko.cluster.sharding.updating-state-timeout=10s
      - CLUSTER_DOWNING_DOWN_REMOVAL_MARGIN=65s
      - LOG_LEVEL=INFO
      - LOG_LEVEL_APPLICATION=INFO
      - AMQP10_CONSUMER_THROTTLING_INTERVAL=100ms
      - AMQP10_CONSUMER_THROTTLING_ENABLED=true
      - AMQP10_CONSUMER_THROTTLING_INTERVAL=1s
      - AMQP10_CONSUMER_THROTTLING_LIMIT=10
      - KAFKA_CONSUMER_THROTTLING_ENABLED=true
      - KAFKA_CONSUMER_THROTTLING_INTERVAL=1s
      - KAFKA_CONSUMER_THROTTLING_LIMIT=10
      - CONNECTIVITY_CONNECTION_ENCRYPTION_KEY=vJFSTPE9PO2BtZlcMAwNjs8jdFvQCk0Ya9MVdYjRJUU=
      - CONNECTIVITY_CONNECTION_ENCRYPTION_ENABLED=true
      - CONNECTIVITY_CONNECTION_ENCRYPTION_POINTERS.0=/uri
      - CONNECTIVITY_CONNECTION_ENCRYPTION_POINTERS.1=/credentials/key
      - CONNECTIVITY_CONNECTION_ENCRYPTION_POINTERS.2=/sshTunnel/credentials/password
      - CONNECTIVITY_CONNECTION_ENCRYPTION_POINTERS.3=/sshTunnel/credentials/privateKey
      - CONNECTIVITY_CONNECTION_ENCRYPTION_POINTERS.4=/credentials/parameters/accessKey
      - CONNECTIVITY_CONNECTION_ENCRYPTION_POINTERS.5=/credentials/parameters/secretKey
      - CONNECTIVITY_CONNECTION_ENCRYPTION_POINTERS.6=/credentials/parameters/sharedKey
      - CONNECTIVITY_CONNECTION_ENCRYPTION_POINTERS.7=/credentials/clientSecret
      - CONNECTIVITY_HTTP_PUSH_MAX_QUEUE_SIZE=100
      - CONNECTIVITY_LOGGER_PUBLISHER_ENABLED=true
      - CONNECTIVITY_LOGGER_PUBLISHER_FLUENCY_HOST=fluentbit
      - CONNECTIVITY_CONNECTION_ALLOWED_HOSTNAMES=127.0.0.1,localhost,artemis,system-test-container,kafka,mqtt,rabbitmq,ssh,unknown,oauth
      - CONNECTIVITY_CONNECTION_BLOCKED_HOSTNAMES=127.0.0.1
      - CONNECTIVITY_ALL_CLIENT_ACTORS_ON_ONE_NODE=true
      - CONNECTIVITY_MQTT_RECONNECT_FOR_REDELIVERY=true
      - CONNECTIVITY_MQTT_SEPARATE_PUBLISHER_CLIENT=true
      - CONNECTION_SOURCE_NUMBER=10
      - CLEANUP_ENABLED=false
      - CLEANUP_HISTORY_RETENTION_DURATION=0d
      - CLEANUP_TIMER_THRESHOLD=10s
      - CLEANUP_CREDITS_PER_BATCH=400
      - CONNECTIVITY_HTTP_OAUTH2_ENFORCE_HTTPS=false
      - HONO_CONNECTION_URI=tcp://kafka:9092
      - HONO_CONNECTION_BOOTSTRAP_SERVERS=kafka:9092
      - HONO_CONNECTION_SASL_MECHANISM=PLAIN
      - HONO_CONNECTION_HONO_USERNAME=kafkaUsername
      - HONO_CONNECTION_HONO_PASSWORD=kafkaPassword

  gateway:
    image: ${DOCKER_REGISTRY:-docker.io}/${DOCKER_REGISTRY_NAMESPACE:-eclipse}/${DITTO_SERVICE_PREFIX-ditto-}gateway:${DITTO_VERSION:-nightly}
    depends_on:
      - policies
    networks:
      - test
    expose:
      - "8080"
    env_file: docker-compose.env
    environment:
      - TZ=Europe/Berlin
      - INSTANCE_INDEX=1
      - BIND_HOSTNAME=gateway
      - JAVA_TOOL_OPTIONS=-Xms${GATEWAY_MEMORY:-1g} -Xmx${GATEWAY_MEMORY:-1g} -Dconfig.override_with_env_vars=true -Dpekko.cluster.seed-nodes.0=pekko://ditto-cluster@policies:2551 -Dpekko.remote.artery.canonical.hostname=gateway ${TEST_JAVA_OPTIONS}
      - CLUSTER_DOWNING_DOWN_REMOVAL_MARGIN=65s
      - LOG_LEVEL=INFO
      - LOG_LEVEL_APPLICATION=INFO
      - DEVOPS_SECURED=false
      - DEVOPS_PASSWORD=foobar
      - STATUS_PASSWORD=status
      - FORCE_HTTPS=false
      - ENABLE_PRE_AUTHENTICATION=true
      - OAUTH_PROTOCOL=http
      - CONFIG_FORCE_ditto_gateway_authentication_oauth_openid__connect__issuers_ditto_issuer=oauth:9900/ditto
      - CONFIG_FORCE_ditto_gateway_authentication_oauth_openid__connect__issuers_dummy_issuer=oauth:9900/dummy
      - GATEWAY_WEBSOCKET_THROTTLING_ENABLED=true
      - GATEWAY_WEBSOCKET_THROTTLING_INTERVAL=1s
      - GATEWAY_WEBSOCKET_THROTTLING_LIMIT=100
      - WS_SUBSCRIBER_BACKPRESSURE=10
      - WS_PUBLISHER_BACKPRESSURE=20
      - GATEWAY_SSE_THROTTLING_ENABLED=true
      - GATEWAY_SSE_THROTTLING_INTERVAL=1s
      - GATEWAY_SSE_THROTTLING_LIMIT=100
      - 'OAUTH_TOKEN_INTEGRATION_SUBJECT=integration:{{jwt:sub}}:{{jwt:aud}}'

  ssh:
    image: ghcr.io/linuxserver/openssh-server:8.6_p1-r3-ls72
    networks:
      - test
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
      - PUBLIC_KEY=ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC80uc7Ftb9eg7tO7DXorQ9TJWmYBVx9kvfDruYtxm7Lt9FqsddHXLSLGSnBGOhnYelkBc6TBN6YgosL0/TQH/9w19CG6cTZsQlO9KhU0oAp6ur8HkzsYez3UQn4kk1+BaccSpJip67NoMbDZ4+VoksP7OPRN6bCC/f5tg3lZH79Oaos+KCllHAgPWfj/koUYdjAcxNIIPF5pTSKKePCcCHgp85chA42hpPHzkWca87zh0pJMhm1v7VVmsEHk/sQQGUzr8PQDdxNkMEtxeRQulNqmgmPQRcnNeHjnv47VifJDQi3NsNnyrLObpyPj70rufk1OqOD6XrzSgJ33iMvztF
      - PASSWORD_ACCESS=true
      - USER_NAME=test
      - USER_PASSWORD=test
    volumes:
      - ./sshd/config:/config:rw
    expose:
      - "2222"
